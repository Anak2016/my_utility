----add system path (does not work)
set PATH=%PATH%;"path/to/be/added/"
-----list all path of allenvironment variable
set
-----list all path of "under environment variable"
set "any enrivonment vairalbe name"

-----create symlink
F:\test>mklink /d <link to desired path> <existed path that will be linked to >
    note: symbolic link created for <link to desired path> <<===>> <existed path that will link to >

#--------find empty port in my computer
netstat -a

#--------create txt files from cmd
echo.>myfile.txt

#--------replace string in txt file using window cmd
powershell -Command "(gc requirements.txt) -replace '==', '>=' | Out-File -encoding ASCII requirements.txt"

definition:
    >powershell starts up powershell.exe, which is included in Windows 7
    >-Command "... " is a command line arg for powershell.exe containing the command to run
    >(gc myFile.txt) reads the content of myFile.txt (gc is short for the Get-Content command)
    >-replace 'foo', 'bar' simply runs the replace command to replace foo with bar
    >| Out-File myFile.txt pipes the output to the file myFile.txt
    >-encoding ASCII prevents transcribing the output file to unicode, as the comments point out

url:https://stackoverflow.com/questions/60034/how-can-you-find-and-replace-text-in-a-file-using-the-windows-command-line-envir

#--------get evironment variable
os.environ['PATH'] # if PATH is your varialbe

#--------list all system path
import sys
print(sys.path)


#=====================
#==anaconda command
#=====================
#--------For Windows users# Note: <> denotes changes to be made

#--------Create a conda environment
conda create --name <environment-name> python=<version:2.7/3.5>

#--------To create a requirements.txt file:
conda list #Gives you list of packages used for the environment

conda list -e > requirements.txt #Save all the info about packages to your folder

#--------To export environment file
activate <environment-name>
conda env export > <environment-name>.yml

#--------For other person to use the environment
conda env create -f <environment-name>.yml

#--------list conda packages
>in deactivate env
    conda list -n myenv
>in activate env
    conda list

#=====================
#==pip command
#=====================
#--------write all installed pip packages to requirements.txt
pip freeze > requirements.txt

#--------upgrade pip packages
>first way
    pip freeze > requirements.txt
    powershell -Command "(gc requirements.txt) -replace '==', '>=' | Out-File -encoding ASCII requirements.txt"
    pip install --upgrade --force-reinstall -r requirements.txt
    pip install -r requirements.txt
>second way
    pip install --upgrade --force-reinstall -r requirements.txt
    or
    pip install --upgrade --force-reinstall -r requirements.txt